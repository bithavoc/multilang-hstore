{
  "name": "Multilang-hstore",
  "tagline": "Multilang is a small library for translating database values for Rails 4 and Postgresql hstore",
  "body": "# Multilang-hstore\r\n\r\n[![Build Status](https://travis-ci.org/bithavoc/multilang-hstore.svg)](https://travis-ci.org/bithavoc/multilang-hstore)\r\n\r\n> Multilang is a small translation library for translating database values for Active Support/Rails 4 using the [Hstore datatype](http://www.postgresql.org/docs/9.0/static/hstore.html).\r\n\r\nThis project is a fork of [artworklv/multilang](https://github.com/artworklv/multilang) with some remarkable differences:\r\n\r\n* Replaced YAML text fields in favor of Hstore fields.\r\n* The translation hash is no longer limited to locales in `I18n.available_locales`.\r\n* Support for Rails 3 and Rails 4.\r\n\r\n## Installation\r\n\r\n### Rails 3\r\n\r\nThe last version of the gem for the Rails 3 series is [0.4](https://github.com/bithavoc/multilang-hstore/tree/v0.4). You need configure the multilang gem inside your gemfile:\r\n\r\n    gem 'multilang-hstore'\r\n\r\nDo not forget to run:\r\n\r\n    bundle install\r\n\r\n### Rails 4\r\n\r\nStarting with version `1.0.0`, this gem is intented to be used in Rails 4. If you are migrating an existing project from Rails 3, make sure you read [Migrating to Rails 4](#Migrating-to-Rails-4).\r\n\r\nYou need configure the multilang gem inside your gemfile:\r\n\r\n    gem 'multilang-hstore', '~> 1.0.0'\r\n\r\nDo not forget to run:\r\n\r\n\tbundle install\r\n\r\n## Basic Usage\r\n\r\nThis is a walkthrough with all steps you need to setup multilang translated attributes, including model and migration.\r\n\r\nWe're assuming here you want a Post model with some multilang attributes, as outlined below:\r\n\r\n    class Post < ActiveRecord::Base\r\n      multilang :title\r\n    end\r\n\r\nor\r\n\r\n    class Post < ActiveRecord::Base\r\n      multilang :title, :description, :required => true, :length => 100\r\n    end\r\n\r\nThe multilang translations are stored in the same model attributes (eg. title):\r\n\r\nYou may need to create migration for Post as usual, but multilang attributes should be in hstore type:\r\n  \r\n    create_table(:posts) do |t|\r\n      t.hstore :title\r\n      t.timestamps\r\n    end\r\n\r\nThats it!\r\n\r\nNow you are able to translate values for the attributes :title and :description per locale:\r\n\r\n    I18n.locale = :en\r\n    post.title = 'Multilang rocks!'\r\n    I18n.locale = :lv\r\n    post.title = 'Multilang rulle!'\r\n\r\n    I18n.locale = :en\r\n    post.title #=> Multilang rocks!\r\n    I18n.locale = :lv\r\n    post.title #=> Multilang rulle!\r\n\r\n\r\nYou may assign attributes through auto generated methods (this methods depend from I18n.available_locales):\r\n\r\n    I18n.available_locales #=> [:en. :lv]\r\n\r\n    post.title_en = 'Multilang rocks!'\r\n    post.title_lv = 'Multilang rulle!'\r\n\r\n    post.title_en #=>  'Multilang rocks!'\r\n    post.title_lv #=>  'Multilang rulle!'\r\n\r\nYou may use initialization if needed:\r\n\r\n    Post.new(:title => {:en => 'Multilang rocks!', :lv => 'Multilang rulle!'})\r\n\r\nor\r\n\r\n    Post.new(:title_en => 'Multilang rocks!', :title_lv => 'Multilang rulle!')\r\n\r\nAlso, you may ise same hashes with setters:\r\n\r\n    post.title = {:en => 'Multilang rocks!', :lv => 'Multilang rulle!'} \r\n\r\n## Attribute methods\r\n\r\nYou may get other translations via attribute translation method:\r\n\r\n    post.title.translation[:lv] #=> 'Multilang rocks!'\r\n    post.title.translation[:en] #=> 'Multilang rulle!'\r\n    post.title.translation.locales #=> [:en, :lv]\r\n\r\nIf you have incomplete translations, you can get translation from other locale:\r\n\r\n    post.title = {:en => 'Multilang rocks!', :lv => ''}\r\n    I18n.locale = :lv\r\n    post.title.any #=> 'Multilang rocks!'\r\n\r\nThe value from \"any\" method returns value for I18n.current_locale or, if value is empty, return value for I18n.default_locale, if it's empty too it searches through all locales. It takes searching order from I18n.available_locales array. If you don't need ANY value, you can also use current_or_default method like `post.title.current_or_default` (it searches value for current and default locales only).\r\n\r\n## Validations\r\n\r\nMultilang has some validation features:\r\n\r\n    multilang :title, :length => 100  #define maximal length validator\r\n    multilang :title, :required => true #define requirement validator for all available_locales\r\n    multilang :title, :required => 1 #define requirement validator for 1 locale\r\n    multilang :title, :required => [:en, :es] #define requirement validator for specific locales\r\n    multilang :title, :format => /regexp/ #define validates_format_of validator\r\n\r\n## Tests\r\n\r\nTest runs using a temporary database in your local PostgreSQL server:\r\n\r\nCreate a test database:\r\n\r\n    $ createdb multilang-hstore-test\r\n\r\nCreate the [hstore extension](http://www.postgresql.org/docs/9.1/static/sql-createextension.html):\r\n\r\n    psql -d multilang-hstore-test -c \"CREATE EXTENSION IF NOT EXISTS hstore\"\r\n\r\nCreate the role *postgres* if necessary:\r\n\r\n    $ createuser -s -r postgres \r\n\r\nFinally, you can run your tests:\r\n  \r\n    rspec\t\r\n\r\n## Migrating to Rails 4\r\n\r\nMigrating to Rails 4 and multilang-hstore 1.x is a very straightforward process.\r\n\r\n### Deprecated Dependencies\r\n\r\nRails 4 has built-in support for `hstore` datatype, so using any dependency to `activerecord-postgres-hstore` must be removed from your Gemfile:\r\n\r\n### Mass-Assignment \r\n\r\nMass-assignment was deprecated in Rails 4, so it was in our gem. You will receive an error similar to this:\r\n\r\n    Multilang::Exceptions::DeprecationError: :accessible was deprecated starting multilang-hstore >= 1.0.0 which is intended for Rails >= 4.0.0. Check more info about the deprecation of mass-asignment in Rails 4\r\n\r\nThis basically means you are trying to use the option `:accessible` which is deprecated. Removing the option will solve the issue:\r\n\r\nBefore:\r\n\r\n\tclass Post < ActiveRecord::Base\r\n\t  multilang :title, :accessible=>true\r\n\tend\r\n\r\nAfter:\r\n\r\n    class Post < ActiveRecord::Base\r\n      multilang :title\r\n\tend\r\n\r\n## Bugs and Feedback\r\n\r\nUse [http://github.com/bithavoc/multilang-hstore/issues](http://github.com/bithavoc/multilang-hstore/issues)\r\n\r\n## License(MIT)\r\n\r\n* Copyright (c) 2012 - 2014 Bithavoc and Contributors - http://bithavoc.io\r\n* Copyright (c) 2010 Arthur Meinart\r\n",
  "google": "UA-54890957-1",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}